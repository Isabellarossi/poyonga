{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# About\r\n\r\nPython [Groonga](http://groonga.org/) Client. poyonga support to HTTP\r\nand GQTP protocol.\r\n\r\n# Installation\r\n\r\nfrom pip:\r\n\r\n    pip install --upgrade poyonga\r\n\r\nfrom easy\\_install:\r\n\r\n    easy_install -ZU poyonga\r\n\r\n# Usage\r\n\r\n## Basic Usage\r\n\r\n    >>> from poyonga import Groonga\r\n    >>> g = Groonga()\r\n    >>> g.protocol\r\n    'http'\r\n    >>> ret = g.call(\"status\")\r\n    >>> ret\r\n    <poyonga.result.GroongaResult object at 0x8505ccc>\r\n    >>> ret.status\r\n    0\r\n    >>> ret.body\r\n    {u'uptime': 427, u'max_command_version': 2, u'n_queries': 3,\r\n    u'cache_hit_rate': 66.6666666666667, u'version': u'1.2.8', u\r\n    'alloc_count': 156, u'command_version': 1, u'starttime': 132\r\n    8286909, u'default_command_version': 1}\r\n    >>>\r\n\r\n## with eventlet\r\n\r\n    from poyonga import Groonga\r\n    import eventlet\r\n\r\n    eventlet.monkey_patch()\r\n\r\n    def fetch(cmd, **kwargs):\r\n        g = Groonga()\r\n        ret = g.call(cmd, **kwargs)\r\n        print ret.status\r\n        print ret.body\r\n        print \"*\" * 40\r\n\r\n    cmds = [(\"status\", {}),\r\n            (\"log_level\", {\"level\": \"warning\"}),\r\n            (\"table_list\", {})\r\n            (\"select\", {\"table\": \"Site\"})]\r\n    pool = eventlet.GreenPool()\r\n    for cmd, kwargs in cmds:\r\n        pool.spawn_n(fetch, cmd, **kwargs)\r\n    pool.waitall()\r\n","name":"Poyonga","tagline":"Python Groonga Client"}